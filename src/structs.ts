/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/formula/get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 查
         * @description 获取指定物质的ID
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        data: components["schemas"]["Matter"];
                    };
                };
            };
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Matter"];
                    };
                };
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": null;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/formula/set": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 增/改
         * @description 添加一个物质，先查对应库中有没有，没有就添加，有就回应
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description 物质式具体内容 */
                        data: components["schemas"]["Matter"];
                        /** @description 标识符 */
                        id: string;
                    };
                };
            };
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": null;
                    };
                };
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 已存在的ID */
                            found: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reaction/get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description 索引区间 */
                        index: components["schemas"]["Range"];
                        /** @description 过滤器 */
                        filter?: {
                            /** @description 条件 */
                            environment?: components["schemas"]["Environment"];
                            /** @description 用到的物质 */
                            matter: components["schemas"]["MatterReference"][];
                        };
                    };
                };
            };
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Reaction"][];
                    };
                };
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": null;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reaction/set": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 增/改
         * @description 会先进行比对，如果没有这样的化学式，则加入数据库的审核部分，等待审核通过后并入主数据库。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        data: components["schemas"]["Reaction"];
                    };
                };
            };
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": null;
                    };
                };
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 已存在的ID */
                            found: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/particle/get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description 微粒ID */
                        id: string;
                    };
                };
            };
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            particle: components["schemas"]["Particle"];
                        };
                    };
                };
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": null;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/particle/set": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 增/改 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description ID */
                        id: string;
                        /** @description 微粒数据 */
                        data: components["schemas"]["Particle"];
                    };
                };
            };
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": Record<string, never>;
                    };
                };
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 已存在的ID */
                            found: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description 选定一个数字范围 */
        Range: {
            /** @description 最小值 */
            min: number;
            /** @description 最大值 */
            max: number;
        };
        /** @description 组成方程式的一种物质 */
        Matter: {
            /**
             * @description 构成模式，分子、原子或离子
             * @enum {string}
             */
            composer: "atom" | "mole" | "lon";
            /** @description 组成物质的微粒 */
            particles: components["schemas"]["Particle"][];
        };
        /** @description 物质式及其计量数 */
        MatterGroup: {
            /** @description 计量数 */
            count: number;
            /** @description 物质式数据 */
            matter: components["schemas"]["MatterReference"];
        };
        /** @description 引用一个物质 */
        MatterReference: components["schemas"]["Matter"];
        /** @description 反应方程式 */
        Reaction: {
            /**
             * @description 方程式类型，离子还是普通
             * @enum {string}
             */
            type: "lon" | "normal";
            /** @description 反应物 */
            inputs: components["schemas"]["MatterGroup"][];
            /** @description 生成物 */
            outputs: components["schemas"]["MatterGroup"][];
            /** @description 环境要求，即条件 */
            environment: components["schemas"]["Environment"];
        };
        /** @description 反应条件 */
        Environment: {
            /** @description 需要的温度 */
            temprature?: {
                /** @description 最小值 */
                min: number;
                /** @description 最大值 */
                max: number;
                /** @description 最佳值 */
                best: number;
            }[];
            /** @description 催化剂 */
            cat?: components["schemas"]["MatterReference"][];
            /** @description 是否需要点燃 */
            pyro?: boolean;
        };
        /** @description 一个微粒 */
        Particle: {
            /** @description 数量角标 */
            count: number;
            /** @description 电子 */
            electron?: number;
            /** @description 质子 */
            proton?: number;
            /** @description 中子 */
            neutron?: number;
            /** @description 化合价 */
            valence?: string;
        };
        /** @description 引用一个微粒 */
        ParticleReference: components["schemas"]["Particle"] | string;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
